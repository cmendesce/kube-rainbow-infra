apiVersion: v1
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: target-acme-model
data:
  target-acme-model.acme: |
    import Kubernetes.acme;
    System KubeZnnSystem : KubernetesFam = new KubernetesFam extended with {
        Component kubeZnnDbS : ServiceT = new ServiceT extended with {
            Port sqlPort  = { }
            Port connectionSqlPort  = { }
            Property name = "kube-znn-db";
        }
        Component kubeZnnDbD : DeploymentT = new DeploymentT extended with {
            Port sqlPort  = { }
            Property namespace = "default";
            Property name = "kube-znn-db";
        }
        Component kubeZnnS : ServiceT = new ServiceT extended with {
            Port apiPort  = { }
            Property name = "kube-znn";
        }
        Component kubeZnnD : DeploymentT = new DeploymentT extended with {
            Port apiPort  = { }
            Port sqlPort  = { }
            Property namespace = "default";
            Property hasAlternativeImages = true;
            Property maxReplicas = 3;
            Property alternativeImages = <"cmendes/kube-znn:text","cmendes/kube-znn:low","cmendes/kube-znn:high">;
            Property name = "kube-znn";
        }
        Connector dbConnection  = new ServiceConnectorT extended with {
            Property namespace = "default";
            Property name = "kube-znn-db";
        }
        Connector kubeZnnServiceConnector  = new LabelSelectorConnectorT extended with {
            Property selectors = <[name : string = "app";value : string = "kube-znn";]>;
        }
        Connector dbServiceConnector  = new ServiceConnectorT extended with {
            Property selectors = <[name : string = "app";value : string = "kube-znn-db";]>;
        }
        Property MAX_RESPTIME = 1000;
        Attachment kubeZnnDbD.sqlPort to dbServiceConnector.selectee;
        Attachment kubeZnnDbS.sqlPort to dbServiceConnector.selector;
        Attachment kubeZnnDbS.connectionSqlPort to kubeZnnServiceConnector.callee;
        Attachment kubeZnnD.sqlPort to kubeZnnServiceConnector.caller;
        Attachment kubeZnnD.apiPort to dbConnection.selectee;
        Attachment kubeZnnS.apiPort to dbConnection.selector;
    }
